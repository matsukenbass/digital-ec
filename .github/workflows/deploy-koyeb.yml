name: Deploy to Koyeb
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PAYLOAD_SECRET: ${{secrets.PAYLOAD_SECRET}}
  MONGODB_URL: ${{vars.MONGODB_URL}}
  RESEND_API_KEY: ${{vars.RESEND_API_KEY}}
  STRIPE_SECRET_KEY: ${{secrets.STRIPE_SECRET_KEY}}
  STRIPE_WEBHOOK_SECRET: ${{secrets.STRIPE_WEBHOOK_SECRET}}
  AWS_REGION: ${{vars.AWS_REGION}}
  S3_ACCESS_KEY_ID: ${{vars.S3_ACCESS_KEY_ID}}
  S3_SECRET_ACCESS_KEY: ${{secrets.S3_SECRET_ACCESS_KEY}}
  NEXT_PUBLIC_AWS_ACCESS_KEY: ${{vars.NEXT_PUBLIC_AWS_ACCESS_KEY}}
  NEXT_PUBLIC_AWS_SECRET: ${{secrets.NEXT_PUBLIC_AWS_SECRET}}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: yarn install --immutable --immutable-cache --check-cache
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: yarn test:e2e
        env:
          CI: ${{vars.CI}}
          PAYLOAD_SECRET: ${{env.PAYLOAD_SECRET}}
          MONGODB_URL: ${{env.MONGODB_URL}}
          NEXT_PUBLIC_SERVER_URL: http://localhost:3000
          RESEND_API_KEY: ${{env.RESEND_API_KEY}}
          STRIPE_SECRET_KEY: ${{env.STRIPE_SECRET_KEY}}
          STRIPE_WEBHOOK_SECRET: ${{env.STRIPE_WEBHOOK_SECRET}}
          AWS_REGION: ${{env.AWS_REGION}}
          S3_ACCESS_KEY_ID: ${{env.S3_ACCESS_KEY_ID}}
          S3_SECRET_ACCESS_KEY: ${{env.S3_SECRET_ACCESS_KEY}}
          NEXT_PUBLIC_AWS_ACCESS_KEY: ${{env.NEXT_PUBLIC_AWS_ACCESS_KEY}}
          NEXT_PUBLIC_AWS_SECRET: ${{env.NEXT_PUBLIC_AWS_SECRET}}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Docker login
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ${{env.REGISTRY}} -u ${{ github.actor }} --password-stdin
      - name: Build and push container image to registry
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{env.REGISTRY}}/${{ github.actor }}/${{vars.REGISTRY_NAME}}:latest
          file: ./Dockerfile
          build-args: |
            "PAYLOAD_SECRET=${{env.PAYLOAD_SECRET}}"
            "MONGODB_URL=${{env.MONGODB_URL}}"
            "NEXT_PUBLIC_SERVER_URL=${{vars.NEXT_PUBLIC_SERVER_URL}}"
            "RESEND_API_KEY=${{env.RESEND_API_KEY}}"
            "STRIPE_SECRET_KEY=${{env.STRIPE_SECRET_KEY}}"
            "STRIPE_WEBHOOK_SECRET=${{env.STRIPE_WEBHOOK_SECRET}}"
            "AWS_REGION=${{env.AWS_REGION}}"
            "S3_ACCESS_KEY_ID=${{env.S3_ACCESS_KEY_ID}}"
            "S3_SECRET_ACCESS_KEY=${{env.S3_SECRET_ACCESS_KEY}}"
            "NEXT_PUBLIC_AWS_ACCESS_KEY=${{env.NEXT_PUBLIC_AWS_ACCESS_KEY}}"
            "NEXT_PUBLIC_AWS_SECRET=${{env.NEXT_PUBLIC_AWS_SECRET}}"
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{env.REGISTRY}}/${{ github.actor }}/${{vars.REGISTRY_NAME}}:latest
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
      - name: Install and configure the Koyeb CLI
        uses: koyeb-community/install-koyeb-cli@v2
        with:
          api_token: '${{ secrets.KOYEB_TOKEN }}'
          github_token: '${{ secrets.GITHUB_TOKEN }}'
      - name: Deploy to Koyeb
        run: koyeb service redeploy digital-ec/digital-ec

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
